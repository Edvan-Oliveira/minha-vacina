{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Pedro Felipe\\\\Desktop\\\\TCC-Minha Vacina\\\\minha-vacina-app\\\\src\\\\screens\\\\cadastro\\\\cadastro.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Picker } from \"@react-native-picker/picker\";\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\nimport { MunicipiosProviders } from \"../../providers/municipios\";\nimport { UsuariosProviders } from \"../../providers/usuarios\";\nimport { InputCampo, InputSenha } from \"../../components/input\";\nimport { CheckboxCampo } from \"./checkbox\";\nimport { ButtonDataCadastro } from \"./button\";\nimport { styles } from \"../../styles/styleLoginCadastro\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { ModalTermoUso } from \"../../components/modal\";\nexport function CadastroScreen(props) {\n  var _this = this;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      aberto = _useState2[0],\n      setAberto = _useState2[1];\n\n  var abrirCalendario = function abrirCalendario() {\n    setAberto(true);\n  };\n\n  var fecharCalendario = function fecharCalendario() {\n    setAberto(false);\n  };\n\n  var _useState3 = useState(new Date(1900, 10, 11)),\n      _useState4 = _slicedToArray(_useState3, 2),\n      dataNascimento = _useState4[0],\n      setDataNascimento = _useState4[1];\n\n  var confirmarDataNascimento = function confirmarDataNascimento(dataNascimento) {\n    setDataNascimento(dataNascimento);\n    fecharCalendario();\n  };\n\n  var pegandoData = new Date(dataNascimento);\n  var diaFormatado = pegandoData.getDate() < 10 ? \"0\" + pegandoData.getDate() : pegandoData.getDate();\n  var mesFormatado = pegandoData.getMonth() + 1 < 10 ? \"0\" + (pegandoData.getMonth() + 1) : pegandoData.getMonth() + 1;\n  var mostrandoData = diaFormatado + \"/\" + mesFormatado + \"/\" + pegandoData.getFullYear();\n\n  function dataNaoFoiPreenchida() {\n    var dataInput = dataNascimento.getDate() + \"/\" + (dataNascimento.getMonth() + 1) + \"/\" + dataNascimento.getFullYear();\n    return mostrandoData === dataInput;\n  }\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      listaMunicipios = _useState6[0],\n      setListaMunicipios = _useState6[1];\n\n  useEffect(function () {\n    MunicipiosProviders.Listar().then(function (listaMunicipios) {\n      return setListaMunicipios(listaMunicipios);\n    });\n  }, []);\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      selecaoMunicipio = _useState8[0],\n      setSelecaoMunicipio = _useState8[1];\n\n  var cadastrar = function cadastrar(usuario) {\n    return _regeneratorRuntime.async(function cadastrar$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            usuario.municipio = selecaoMunicipio;\n            usuario.dataNascimento = dataNascimento;\n\n            if (!(!usuario.municipio || !usuario.dataNascimento)) {\n              _context.next = 6;\n              break;\n            }\n\n            ToastAndroid.show(\"Campo município e data de nascimento são obrigatórios\", 1000);\n            _context.next = 9;\n            break;\n\n          case 6:\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(UsuariosProviders.Cadastar(usuario));\n\n          case 8:\n            ToastAndroid.show(\"Usuário cadastrado com sucesso\", 1000);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      termoUsoSelecionado = _useState10[0],\n      setTermoUsoSelecionado = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      termoNotificacaoSelecionado = _useState12[0],\n      setTermoNotificacaoSelecionado = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      modalSelecionado = _useState14[0],\n      setModalSelecionado = _useState14[1];\n\n  var _useState15 = useState(true),\n      _useState16 = _slicedToArray(_useState15, 2),\n      mostrarSenha = _useState16[0],\n      setMostrarSenha = _useState16[1];\n\n  var alternar = function alternar() {\n    setMostrarSenha(!mostrarSenha);\n  };\n\n  var nav = useNavigation();\n  return React.createElement(ScrollView, {\n    style: styles.fundo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }\n  }, React.createElement(StatusBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.logoApp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, \"Logo Minha Vacina\")), React.createElement(Formik, {\n    initialValues: {\n      nome: \"\",\n      municipio: {\n        id: null,\n        nome: \"\"\n      },\n      dataNascimento: null,\n      email: \"\",\n      senha: \"\"\n    },\n    validationSchema: Yup.object().shape({\n      nome: Yup.string().required(\"Campo nome obrigatório\").min(5, \"Campo Nome incompleto\").max(35, \"Máximo 35 caracteres\"),\n      email: Yup.string().required(\"Campo e-mail obrigatório\").email(\"Email inválido\").max(30, \"Máximo 30 caracteres\"),\n      senha: Yup.string().required(\"Campo senha obrigatório\").min(8, \"Mínimo 8 caracteres\").max(20, \"Máximo 20 caracteres\")\n    }),\n    onSubmit: cadastrar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, function (_ref) {\n    var handleChange = _ref.handleChange,\n        handleSubmit = _ref.handleSubmit,\n        errors = _ref.errors,\n        isSubmitting = _ref.isSubmitting,\n        touched = _ref.touched,\n        handleBlur = _ref.handleBlur;\n    return React.createElement(View, {\n      style: styles.conteinerFormCadastro,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }\n    }, React.createElement(InputCampo, {\n      placeholder: \"Digite seu nome completo\",\n      icone: \"person\",\n      onChangeText: handleChange(\"nome\"),\n      onBlur: function onBlur() {\n        return handleBlur(\"nome\");\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }\n    }), touched.nome && React.createElement(Text, {\n      style: styles.erro,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 30\n      }\n    }, errors.nome), React.createElement(View, {\n      style: styles.containerPicker,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }\n    }, React.createElement(Picker, {\n      selectedValue: selecaoMunicipio,\n      onValueChange: setSelecaoMunicipio,\n      style: styles.btnPicker,\n      dropdownIconColor: \"white\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 15\n      }\n    }, React.createElement(Picker.Item, {\n      style: styles.btnPicker,\n      label: \"Selecione seu munic\\xEDpio\",\n      value: \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }\n    }), listaMunicipios.map(function (m) {\n      return React.createElement(Picker.Item, {\n        style: styles.btnPicker,\n        label: m.nome,\n        value: m.id,\n        key: m.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }\n      });\n    }))), React.createElement(View, {\n      style: styles.containerBtnCalendario,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 13\n      }\n    }, React.createElement(ButtonDataCadastro, {\n      titulo: dataNaoFoiPreenchida() ? 'Informe a data' : mostrandoData,\n      icone: \"today\",\n      onPress: abrirCalendario,\n      estilo: styles.btnCalendario,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 15\n      }\n    })), React.createElement(DateTimePickerModal, {\n      isVisible: aberto,\n      mode: \"date\",\n      onConfirm: confirmarDataNascimento,\n      onCancel: fecharCalendario,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 13\n      }\n    }), React.createElement(InputCampo, {\n      placeholder: \"Digite seu e-mail\",\n      icone: \"email\",\n      tipoTeclado: \"email-address\",\n      onChangeText: handleChange(\"email\"),\n      onBlur: function onBlur() {\n        return handleBlur(\"email\");\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 13\n      }\n    }), touched.email && React.createElement(Text, {\n      style: styles.erro,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 31\n      }\n    }, errors.email), React.createElement(InputSenha, {\n      placeholder: \"Digite sua senha\",\n      onChangeText: handleChange(\"senha\"),\n      onBlur: function onBlur() {\n        return handleBlur(\"senha\");\n      },\n      secureText: mostrarSenha,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 13\n      }\n    }), touched.senha && React.createElement(Text, {\n      style: styles.erro,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 31\n      }\n    }, errors.senha), React.createElement(View, {\n      style: styles.btnVerSenha,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 13\n      }\n    }, React.createElement(Switch, {\n      onValueChange: alternar,\n      value: mostrarSenha,\n      trackColor: {\n        true: '#12963C',\n        false: '#bbbbbb'\n      },\n      thumbColor: mostrarSenha ? '#12963C' : '#bbbbbb',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 15\n      }\n    }), React.createElement(Text, {\n      style: styles.textoExibirsenha,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 15\n      }\n    }, \"Exibir senha\")), React.createElement(ModalTermoUso, {\n      titulo: \"Termos de uso\",\n      visivel: modalSelecionado,\n      onCancelar: function onCancelar() {\n        return setModalSelecionado(!modalSelecionado);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 15\n      }\n    }, \"Tudo o texto\")), React.createElement(TouchableOpacity, {\n      style: styles.containerTextTermo,\n      onPress: function onPress() {\n        return setModalSelecionado(!modalSelecionado);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: styles.textTermoUso,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 15\n      }\n    }, \"Termos de uso\")), React.createElement(View, {\n      style: styles.containerCheckbox,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 13\n      }\n    }, React.createElement(CheckboxCampo, {\n      titulo: \"Eu concordo com os termos de uso\",\n      iconeMarcado: \"check\",\n      iconeDesmarcado: \"square-o\",\n      corMarcada: \"green\",\n      verificado: termoUsoSelecionado,\n      onPress: function onPress() {\n        return setTermoUsoSelecionado(!termoUsoSelecionado);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 15\n      }\n    })), React.createElement(View, {\n      style: styles.containerCheckbox2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 13\n      }\n    }, React.createElement(CheckboxCampo, {\n      titulo: \"Eu estou ciente que irei receber notifica\\xE7\\xF5es\",\n      iconeMarcado: \"check\",\n      iconeDesmarcado: \"square-o\",\n      corMarcada: \"green\",\n      verificado: termoNotificacaoSelecionado,\n      onPress: function onPress() {\n        return setTermoNotificacaoSelecionado(!termoNotificacaoSelecionado);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 15\n      }\n    })), isSubmitting && React.createElement(ActivityIndicator, {\n      style: styles.carregando,\n      size: \"small\",\n      color: \"white\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 13\n      }\n    }), !isSubmitting && React.createElement(ButtonDataCadastro, {\n      titulo: \"Cadastrar-se\",\n      disabled: !termoUsoSelecionado || !termoNotificacaoSelecionado,\n      onPress: function onPress() {\n        return handleSubmit();\n      },\n      estilo: styles.btnCadastrar,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 13\n      }\n    }), React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return nav.navigate(\"login\");\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: styles.textContaLoginCadastrar,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 15\n      }\n    }, \"J\\xE1 possuo uma conta!\")));\n  }));\n}","map":{"version":3,"sources":["C:/Users/Pedro Felipe/Desktop/TCC-Minha Vacina/minha-vacina-app/src/screens/cadastro/cadastro.tsx"],"names":["React","Formik","Yup","Picker","DateTimePickerModal","MunicipiosProviders","UsuariosProviders","InputCampo","InputSenha","CheckboxCampo","ButtonDataCadastro","styles","useEffect","useState","useNavigation","ModalTermoUso","CadastroScreen","props","aberto","setAberto","abrirCalendario","fecharCalendario","Date","dataNascimento","setDataNascimento","confirmarDataNascimento","pegandoData","diaFormatado","getDate","mesFormatado","getMonth","mostrandoData","getFullYear","dataNaoFoiPreenchida","dataInput","listaMunicipios","setListaMunicipios","Listar","then","selecaoMunicipio","setSelecaoMunicipio","cadastrar","usuario","municipio","ToastAndroid","show","Cadastar","termoUsoSelecionado","setTermoUsoSelecionado","termoNotificacaoSelecionado","setTermoNotificacaoSelecionado","modalSelecionado","setModalSelecionado","mostrarSenha","setMostrarSenha","alternar","nav","fundo","logoApp","nome","id","email","senha","object","shape","string","required","min","max","handleChange","handleSubmit","errors","isSubmitting","touched","handleBlur","conteinerFormCadastro","erro","containerPicker","btnPicker","map","m","containerBtnCalendario","btnCalendario","btnVerSenha","true","false","textoExibirsenha","containerTextTermo","textTermoUso","containerCheckbox","containerCheckbox2","carregando","btnCadastrar","navigate","textContaLoginCadastrar"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StatusBar,\r\n  TouchableOpacity,\r\n  ActivityIndicator,\r\n  ToastAndroid,\r\n  ScrollView,\r\n  Switch,\r\n} from \"react-native\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Picker } from \"@react-native-picker/picker\";\r\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\r\nimport { Municipio } from \"../../models/municipio\";\r\nimport { MunicipiosProviders } from \"../../providers/municipios\";\r\nimport { UsuariosProviders } from \"../../providers/usuarios\";\r\nimport { Usuario } from \"../../models/usuario\";\r\nimport { InputCampo, InputSenha } from \"../../components/input\";\r\nimport { CheckboxCampo } from \"./checkbox\";\r\nimport { ButtonDataCadastro } from \"./button\";\r\nimport { styles } from \"../../styles/styleLoginCadastro\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { ModalTermoUso } from \"../../components/modal\";\r\n\r\nexport interface CadastroScreenProps {}\r\n\r\nexport function CadastroScreen(props: CadastroScreenProps) {\r\n  //Abrir Calendário\r\n  const [aberto, setAberto] = useState<boolean>(false)\r\n\r\n  const abrirCalendario = () => {\r\n    setAberto(true)\r\n  };\r\n\r\n  const fecharCalendario = () => {\r\n    setAberto(false)\r\n  };\r\n\r\n  //Selecionando Data\r\n  const [dataNascimento, setDataNascimento] = useState(new Date(1900,10,11))\r\n  const confirmarDataNascimento = (dataNascimento: Date) => {\r\n    setDataNascimento(dataNascimento)\r\n    fecharCalendario()\r\n  };\r\n  \r\n   //Mostrando Data\r\n   let pegandoData = new Date(dataNascimento)\r\n   let diaFormatado =\r\n     pegandoData.getDate() < 10\r\n       ? \"0\" + pegandoData.getDate()\r\n       : pegandoData.getDate()\r\n   let mesFormatado =\r\n     pegandoData.getMonth() + 1 < 10\r\n       ? \"0\" + (pegandoData.getMonth() + 1)\r\n       : pegandoData.getMonth() + 1\r\n   let mostrandoData =\r\n     diaFormatado + \"/\" + mesFormatado + \"/\" + pegandoData.getFullYear()\r\n  \r\n   function dataNaoFoiPreenchida() : boolean {\r\n     let dataInput =  dataNascimento.getDate() + \"/\" + (dataNascimento.getMonth() + 1)\r\n                      + \"/\" + dataNascimento.getFullYear()\r\n      return mostrandoData === dataInput\r\n  }\r\n\r\n  //Listando Municípios\r\n  const [listaMunicipios, setListaMunicipios] = useState<Municipio[]>([])\r\n  useEffect(() => {\r\n    MunicipiosProviders.Listar().then((listaMunicipios) =>\r\n      setListaMunicipios(listaMunicipios)\r\n    )\r\n  }, [])\r\n\r\n  //Selecionando Município\r\n  const [selecaoMunicipio, setSelecaoMunicipio] = useState<Municipio>()\r\n\r\n  //Cadastrando Usuário\r\n  const cadastrar = async (usuario: Usuario) => {\r\n    usuario.municipio = selecaoMunicipio\r\n    usuario.dataNascimento = dataNascimento\r\n    if (!usuario.municipio || !usuario.dataNascimento) {\r\n      ToastAndroid.show(\r\n        \"Campo município e data de nascimento são obrigatórios\", 1000)\r\n    } else {\r\n      await UsuariosProviders.Cadastar(usuario);\r\n      ToastAndroid.show(\"Usuário cadastrado com sucesso\", 1000)\r\n    }\r\n  }\r\n\r\n  //Estados de seleção checkBoxs\r\n  const [termoUsoSelecionado, setTermoUsoSelecionado] = useState(false)\r\n  const [termoNotificacaoSelecionado, setTermoNotificacaoSelecionado] = useState(false)\r\n\r\n  //Estado de selação modal\r\n  const [modalSelecionado, setModalSelecionado] = useState(false)\r\n\r\n  const [mostrarSenha, setMostrarSenha] = useState(true)\r\n\r\n  const alternar = () => {\r\n    setMostrarSenha(!mostrarSenha)\r\n  }\r\n\r\n  //Navegação\r\n  const nav = useNavigation()\r\n\r\n  return (\r\n    <ScrollView style={styles.fundo}>\r\n      <StatusBar />\r\n      <View style={styles.logoApp}>\r\n        <Text>Logo Minha Vacina</Text>\r\n      </View>\r\n      <Formik\r\n        initialValues={{\r\n          nome: \"\",\r\n          municipio: {\r\n            id: null,\r\n            nome: \"\",\r\n          },\r\n          dataNascimento: null,\r\n          email: \"\",\r\n          senha: \"\",\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          nome: Yup.string()\r\n            .required(\"Campo nome obrigatório\")\r\n            .min(5, \"Campo Nome incompleto\")\r\n            .max(35, \"Máximo 35 caracteres\"),\r\n          email: Yup.string()\r\n            .required(\"Campo e-mail obrigatório\")\r\n            .email(\"Email inválido\")\r\n            .max(30, \"Máximo 30 caracteres\"),\r\n          senha: Yup.string()\r\n            .required(\"Campo senha obrigatório\")\r\n            .min(8, \"Mínimo 8 caracteres\")\r\n            .max(20, \"Máximo 20 caracteres\") \r\n        })}\r\n        onSubmit={cadastrar}\r\n      >\r\n        {({\r\n          handleChange,\r\n          handleSubmit,\r\n          errors,\r\n          isSubmitting,\r\n          touched,\r\n          handleBlur,\r\n        }) => (\r\n\r\n          <View style={styles.conteinerFormCadastro}>\r\n            <InputCampo\r\n              placeholder=\"Digite seu nome completo\"\r\n              icone=\"person\"\r\n              onChangeText={handleChange(\"nome\")}\r\n              onBlur={() => handleBlur(\"nome\")}\r\n            />\r\n            {touched.nome && <Text style={styles.erro}>{errors.nome}</Text>}\r\n\r\n            <View style={styles.containerPicker}>\r\n              <Picker\r\n                selectedValue={selecaoMunicipio}\r\n                onValueChange={setSelecaoMunicipio}\r\n                style={styles.btnPicker}\r\n                dropdownIconColor={\"white\"}\r\n              >\r\n                <Picker.Item\r\n                  style={styles.btnPicker}\r\n                  label=\"Selecione seu município\"\r\n                  value=\"\"\r\n                />\r\n                {listaMunicipios.map((m) => {\r\n                  return (\r\n                    <Picker.Item\r\n                      style={styles.btnPicker}\r\n                      label={m.nome}\r\n                      value={m.id}\r\n                      key={m.id}\r\n                    />\r\n                  )\r\n                })}\r\n              </Picker>\r\n            </View>\r\n\r\n            <View style={styles.containerBtnCalendario}>\r\n              <ButtonDataCadastro\r\n                titulo={dataNaoFoiPreenchida() ? 'Informe a data' : mostrandoData}\r\n                icone={\"today\"}\r\n                onPress={abrirCalendario}\r\n                estilo={styles.btnCalendario}\r\n              />\r\n            </View>\r\n\r\n            <DateTimePickerModal\r\n              isVisible={aberto}\r\n              mode=\"date\"\r\n              onConfirm={confirmarDataNascimento}\r\n              onCancel={fecharCalendario}\r\n            />\r\n\r\n            <InputCampo\r\n              placeholder=\"Digite seu e-mail\"\r\n              icone=\"email\"\r\n              tipoTeclado=\"email-address\"\r\n              onChangeText={handleChange(\"email\")}\r\n              onBlur={() => handleBlur(\"email\")}\r\n            />\r\n            {touched.email && <Text style={styles.erro}>{errors.email}</Text>}\r\n\r\n            <InputSenha\r\n              placeholder=\"Digite sua senha\"\r\n              onChangeText={handleChange(\"senha\")}\r\n              onBlur={() => handleBlur(\"senha\")}\r\n              secureText={mostrarSenha}\r\n            />\r\n            {touched.senha && <Text style={styles.erro}>{errors.senha}</Text>}\r\n            <View style={styles.btnVerSenha}>\r\n              <Switch\r\n                onValueChange={alternar}\r\n                value={mostrarSenha}\r\n                trackColor={{ true: '#12963C', false: '#bbbbbb' }}\r\n                thumbColor={mostrarSenha ? '#12963C' : '#bbbbbb'}\r\n              />\r\n              <Text style={styles.textoExibirsenha}>Exibir senha</Text>\r\n            </View>\r\n            <ModalTermoUso\r\n              titulo=\"Termos de uso\"\r\n              visivel={modalSelecionado}\r\n              onCancelar={()=> setModalSelecionado(!modalSelecionado)}\r\n            >\r\n              <Text>Tudo o texto</Text>\r\n              \r\n            </ModalTermoUso>\r\n\r\n            <TouchableOpacity style={styles.containerTextTermo} onPress={() => setModalSelecionado(!modalSelecionado)}>\r\n              <Text style={styles.textTermoUso}>Termos de uso</Text>\r\n            </TouchableOpacity>\r\n            <View style={styles.containerCheckbox}>\r\n              <CheckboxCampo\r\n                titulo=\"Eu concordo com os termos de uso\"\r\n                iconeMarcado=\"check\"\r\n                iconeDesmarcado=\"square-o\"\r\n                corMarcada=\"green\"\r\n                verificado={termoUsoSelecionado}\r\n                onPress={() => setTermoUsoSelecionado(!termoUsoSelecionado)}\r\n              />\r\n            </View>\r\n            <View style={styles.containerCheckbox2}>\r\n              <CheckboxCampo\r\n                titulo=\"Eu estou ciente que irei receber notificações\"\r\n                iconeMarcado=\"check\"\r\n                iconeDesmarcado=\"square-o\"\r\n                corMarcada=\"green\"\r\n                verificado={termoNotificacaoSelecionado}\r\n                onPress={() =>\r\n                  setTermoNotificacaoSelecionado(!termoNotificacaoSelecionado)\r\n                }\r\n              />\r\n            </View>\r\n\r\n            {isSubmitting && (\r\n            <ActivityIndicator\r\n              style={styles.carregando}\r\n              size=\"small\"\r\n              color=\"white\"\r\n            />\r\n            )}\r\n            {!isSubmitting && (\r\n            <ButtonDataCadastro\r\n              titulo=\"Cadastrar-se\"\r\n              disabled={!termoUsoSelecionado || !termoNotificacaoSelecionado}\r\n              onPress={() => handleSubmit()}\r\n              estilo={styles.btnCadastrar}\r\n            />\r\n            )}\r\n            <TouchableOpacity onPress={() => nav.navigate(\"login\")}>\r\n              <Text style={styles.textContaLoginCadastrar}>Já possuo uma conta!</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        )}\r\n      </Formik>\r\n    </ScrollView>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}